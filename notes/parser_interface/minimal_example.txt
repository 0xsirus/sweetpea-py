all-streams : streams
    task
        color-task
        motion-task
    response
        left
        right


<label> : <type>


// "design"
base : base-stream
  cross task response //not sure how to handle line breaks here

  // assuming these always "TOP LEVEL labels"
  // "nested levels" seems wrong- because if we've got light colors & dark colors, each trials still only has 1 color paramter

startsWith:
  exactly
    task color-task
    response left


constraints:
    no more than 7 in a row, applied to:
        task

// or
base-stream: cross ALL streams  //cross all only works on the root- how is this going to work for the other example?


experiment: apply constraints
              base-stream



constraints & experiments apply to a given base-stream.

----------------------------
block-level operations:

exactly (red circle) <-- must specify all levels or this is an error
avoid (blue) <-- any stream
include (red) <-- any stream
randomize
sequence
append
apply <constraint-label>
repeat {a,b}

----------------------------
constraint-level operations: (note that these are *for all* constraints)

balance-transitions <transition-stream>
max-in-a-row 7 <stream>
count atMost 3 in 7 <stream>
anyOf <stream>
allOf <stream>


{,3}
atLeast 1 in 7
atMost 3 in 7
between 1 3 in 7


# this doesn't make sense
count {4} in 8 anyOf
  allOf
    color-light-pink
    color-light-blue
  color-dark-blue

at least 4 of every 8 should be, applied to AnyOf:






max-in-a-row 4

is the same as

count between 0 4 in 4


ie

randomize
    append      # randomizes the combination of trials in b1 & b2
        block1
        block2

randomize
    sequence      # randomizes which of b1 & b2 comes first: note to self, make a new variable to flag this
        block1
        block2
